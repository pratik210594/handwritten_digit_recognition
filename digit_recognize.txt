from sklearn.datasets import fetch_openml

mnist = fetch_openml('mnist_784')

x ,y = mnist['data'], mnist['target']

x.shape

y.shape

%matplotlib inline


import matplotlib
import matplotlib.pyplot as plt

some_digit = x.to_numpy()[36001]
some_digit_image = some_digit.reshape(28, 28) #reshape to plot

plt.imshow(some_digit_image, cmap=matplotlib.cm.binary, interpolation ="nearest")
plt.axis("off")


y[36001]

x_train, x_test = x.to_numpy()[0:6000], x.to_numpy()[6000:7000]


y_train, y_test = y.to_numpy()[0:6000], y.to_numpy()[6000:7000]


import numpy as np

shuffle_index = np.random.permutation(6000)

x_train, y_train = x_train[shuffle_index], y_train[shuffle_index]




## create a 2 detector 

y_train = y_train.astype(np.int8)

y_train = y_train.astype(np.int8)
y_test = y_test.astype(np.int8)

y_train_2 = (y_train<2)

y_test_2 = (y_test==2)


y_train



from sklearn.linear_model import LogisticRegression


clf = LogisticRegression(tol = 0.1)


clf.fit(x_train, y_train_2)


clf.predict([some_digit])

